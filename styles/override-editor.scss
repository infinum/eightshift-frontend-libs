/*
 * Setting up overrides for default editor styles.
 *
*/

$base-sea-color: #F5F5F5;
$base-silver-color: #D4D1D1;
$base-error-color: #CC1818;

$override-map: (
	highlighted-panel: $base-sea-color,
	divider: $base-silver-color,
	hover: $base-black-color,
);

@keyframes es-rotate {
	100% {
		transform: rotate(360deg);
	}
}

@keyframes es-dash {
	0% {
		stroke-dasharray: 1, 150;
		stroke-dashoffset: 0;
	}

	50% {
		stroke-dasharray: 90, 150;
		stroke-dashoffset: -35;
	}

	100% {
		stroke-dasharray: 90, 150;
		stroke-dashoffset: -124;
	}
}

/* stylelint-disable */
// Overrides default styles from inline editor.
body {
	.editor-styles-wrapper {
		font-family: inherit;
		line-height: inherit;
		font-size: inherit;
		color: inherit;
	}

	// Moving border around the block to the actual block line.
	.block-editor-block-list__layout {
		.#{global-settings(customBlocksName)} {
			&.wp-block {
				max-width: 100%;
				transition: {
					property: box-shadow;
					timing-function: ease-in;
					duration: 0.15s;
				}

				&:hover {
					box-shadow: 0 0 3px rgba(map-get-strict($override-map, hover), 0.3);
				}
			}

			// Removing block spacing.
			[data-block] {
				margin-top: 0;
				margin-bottom: 0;
			}

			&.block-editor-block-list__block {
				max-width: none;

				// Move plus sign for adding new block before selected block to the right.
				& > .block-editor-block-list__insertion-point {
					left: auto;
					right: 0;
					width: 50px;
					top: 0;
				}

				// Remove border padding line over the block.
				.block-editor-block-list__block-edit::before {
					top: 0;
					bottom: 0;
				}
			}
		}

		.block-editor-block-list__block.is-reusable {
			max-width: none;
		}
	}

	// // Add new block button fix width if it is flex.
	.block-list-appender {
		width: 100%;
	}

	// Spread sidebar default input to full width.
	.edit-post-sidebar {
		.block-editor-url-input input[type='text'] {
			width: 100%;
		}
	}

	// Full width button.
	.custom-full-width-button {
		width: 100%;
		justify-content: center;
	}

	// Help item flex.
	.help-item-flex {
		display: flex;
		align-items: center;
		padding: 0.5rem 0;

		svg {
			min-width: 3.5rem;
			color: var(--wp-admin-theme-color, #007cba);
		}
	}

	// Help item flex col.
	.help-item-flex-col {
		display: flex;
		flex-direction: column;
		margin-left: 1rem;

		h4,
		p {
			margin: 0;
		}

		h4 {
			margin-bottom: 0.2rem;
		}
	}

	// Custom divider.
	.custom-divider {
		width: 100%;
		height: 1px;
		background-color: map-get-strict($override-map, divider);
		margin: 10px 0;
	}

	// Bump edit-post-sidebar__panel-tabs z-index.
	.edit-post-sidebar__panel-tabs {
		z-index: 2 !important;
	}

	// Custom responsive field.
	.es-responsive {
		margin: 0 -1rem;
		padding: 0 1rem;
		transition: 0.3s padding ease-out, 0.3s margin ease-out;

		.components-base-control__field {
			margin-bottom: 0 !important;
		}

		> .components-base-control__field {
			display: flex;
			flex-direction: column;
			width: 100%;
			gap: 0.5rem;
			padding: 0;
			margin: 0;
			transition: 0.3s padding ease-out, 0.3s border-color ease-out;
			border-radius: 3px;
			border: 1px solid transparent;

			& > .components-base-control,
			& > .es-icon-toggle,
			& > .es-responsive-inset {
				margin-bottom: 0 !important;

				&:first-of-type {
					transition: 0.3s padding-left ease-out, 0.3s margin-left ease-out, 0.3s border-left-width ease-out;
				}

				&:first-of-type:not(.components-base-control__label) {
					margin-left: 0.75rem;
					padding-left: 1.25rem;
					border-left: 1px solid hsl(0, 0%, 94%);
				}
			}
		}

		&.is-open {
			padding: 0 0.5rem;

			> .components-base-control__field {
				padding: 0 0.75rem 0.75rem;
				border-color: var(--wp-admin-theme-color, #111111);

				> .components-base-control__label {
					background-color: rgb(255, 255, 255);
					border-bottom-color: rgba(0, 0, 0, 0.16);
					padding: 0.75rem 0;
					position: sticky;
					top: calc(3rem - 1px);
					z-index: 1;
				}

				> .components-base-control:first-of-type:not(.components-base-control__label),
				> .es-icon-toggle:first-of-type,
				> .es-responsive-inset:first-of-type {
					margin-left: 0;
					padding-left: 0;
					border-left-width: 0;
				}
			}
		}
	}

	// Highlighted panel
	.custom-highlighted-panel {
		background-color: map-get-strict($override-map, highlighted-panel);
	}

	// Aligning image and text vertically.
	.components-base-control {
		.components-select-control__input[multiple] {
			min-height: 70px;
		}
	}

	// Hack for storybook.
	.components-range-control__slider {
		min-width: 1px;
	}

	.components-panel__body-toggle.components-button .components-panel__arrow {
		width: 1.5rem;
		height: 1.5rem;
	}

	// Adding space between ColorSwatches and label
	.components-circular-option-picker .components-circular-option-picker__swatches {
		margin-top: 0.5rem;
	}

	// Fix label styling and stylize SVGs
	.components-base-control__label,
	.components-input-control__label {
		display: flex !important;
		align-items: center;
		width: 100%;
		height: 100%;
		min-height: 2rem;
		margin-bottom: 0.3rem;
		line-height: 1;
		gap: 0.5rem;
		border-bottom: 1px solid transparent;
		transition: 0.3s padding ease-out, 0.3s margin ease-out;

		svg {
			height: 1.5rem !important;
			width: 1.5rem !important;
			margin: 0 !important;

			&:not(button svg) {
				color: var(--wp-admin-theme-color, #111111);
			}
		}

		button {
			margin-left: auto !important;
		}
	}

	.components-toggle-control__label {
		margin-bottom: 0 !important;
	}

	.custom-full-width-btn {
		width: 100%;
		text-align: center;
		justify-content: center;
	}

	// Fix for disabled button icon foregrounds and backgrounds.
	button[disabled] .block-editor-block-icon.has-colors,
	.components-button.components-toolbar-button.block-editor-block-parent-selector__button.has-icon
		.block-editor-block-icon {
		background-color: var(--eightshift-block-icon-background, transparent) !important;
		color: var(--eightshift-block-icon-foreground, #333333) !important;
		opacity: 1 !important;
	}

	.components-button.block-editor-block-switcher__no-switcher-icon:disabled .block-editor-block-icon.has-colors {
		color: var(--eightshift-block-icon-foreground, #333333) !important;
	}

	// Enlarge the icons in the Options panel a bit.
	.block-editor-block-card .block-editor-block-icon {
		height: 2.5rem !important;
		min-height: 2.5rem !important;
		max-height: 2.5rem !important;
		width: 2.5rem !important;
		min-width: 2.5rem !important;
		max-width: 2.5rem !important;
		border-radius: 4px;
		flex-shrink: 0;
		flex-grow: 1;

		svg {
			transform: scale(1.25);
		}
	}

	// Enlarge the icons in the toolbar a bit.
	button[disabled] .block-editor-block-icon.has-colors,
	.components-button.components-toolbar-button.block-editor-block-parent-selector__button.has-icon
	.block-editor-block-icon,
	.block-editor-block-toolbar__block-controls
	.block-editor-block-switcher
	.components-dropdown-menu__toggle
	.block-editor-block-icon {
		height: 1.75rem !important;
		width: 1.75rem !important;
		border-radius: 4px;

		svg {
			transform: scale(1.1);
		}
	}

	.components-accessible-toolbar .components-toolbar-group > .components-button.components-button.has-icon svg {
		min-width: unset !important;
	}

	// Enlarge icon in component menu.
	.components-menu-item__item .block-editor-block-icon {
		height: 1.75rem !important;
		width: 1.75rem !important;
		border-radius: 4px;
	}

	// Fix some toolbar icons not having the right styling.
	button[disabled].components-button.components-toolbar__control.block-editor-block-switcher__no-switcher-icon.has-icon {
		.block-editor-block-icon {
			height: 1.75rem !important;
			width: 1.75rem !important;
			border-radius: 4px;

			svg {
				width: 1.25rem;
				height: 1.25rem;
				transform: scale(1.1) translateX(2px);
			}
		}
	}

	button.components-button.components-toolbar__control.block-editor-block-parent-selector__button.has-icon {
		.block-editor-block-icon {
			height: 1.75rem !important;
			width: 1.75rem !important;
			border-radius: 3px;
			background-color: var(--eightshift-block-icon-background, transparent) !important;
			color: var(--eightshift-block-icon-foreground, #333333) !important;

			svg {
				width: 1.25rem;
				height: 1.25rem;
				transform: scale(1.1);
			}
		}
	}

	// Panel body title with icon in front.
	// Must have the title wrapped in a <span>!
	.es-panel-title {
		> .components-panel__body-title {
			> .components-panel__body-toggle {
				display: flex;
				align-items: center;
				flex-direction: row-reverse !important;
				gap: 0.5rem;

				span {
					margin-right: auto !important;
				}

				svg:not(span svg) {
					margin: 0 !important;
					color: #757575;
					height: 1.25rem !important;
					width: 1.25rem !important;
				}
			}
		}

		i {
			line-height: 0;
		}
	}

	// Panel body without title.
	.es-panel-standalone {
		.components-base-control.components-toggle-control {
			margin-bottom: 0;

			.components-base-control__field {
				margin-bottom: 0;
			}
		}
	}

	// Style for new help buttons.
	.es-help-button {
		gap: 0.4rem;
	}

	// Style for toggle with icon.
	.es-icon-toggle {
		display: flex;
		align-items: center;
		gap: 0.45rem;

		&:not(:last-of-type) {
			margin-bottom: 1rem;
		}

		&--reverse {
			.components-base-control__field {
				flex-direction: row-reverse;
				gap: 0.5rem;

				label {
					margin-right: auto;
				}

				.components-form-toggle {
					margin-right: 0 !important;
				}
			}

			.components-base-control__help {
				margin-top: 0.2rem;
				margin-bottom: 0 !important;
				padding-right: 3rem;
			}
		}

		svg {
			height: 1.5rem;
			width: 1.5rem;
			color: var(--wp-admin-theme-color, #007cba);
			flex-shrink: 0;
		}

		.components-base-control.components-toggle-control {
			margin-bottom: 0;
			width: 100%;

			.components-base-control__field {
				margin-bottom: 0;
			}
		}
	}

	// Make sure toolbar icon size matches regardless of icon source.
	.block-editor-block-toolbar__slot {
		.components-toolbar-group {
			.components-toolbar-button.has-icon {
				i {
					line-height: 0;
				}

				svg {
					height: 1.4rem;
					width: 1.4rem;
				}
			}
		}
	}

	// Add panel text divider style.
	.es-panel-text-divider {
		display: block;
		margin-top: 2rem;
		margin-bottom: 0.75rem;
		padding-bottom: 0.2rem;
		border-bottom: 1px solid hsl(0, 0%, 90%);
		opacity: 0.9;
		font-size: 0.7rem;
		font-weight: 500;
		letter-spacing: 1px;
		text-transform: uppercase;
		user-select: none;
	}

	// Small square button with icon style.
	.es-small-square-icon-button {
		min-width: 1.5rem !important;
		width: 1.5rem !important;
		height: 1.5rem !important;
		padding: 0 !important;
		align-items: center !important;
		justify-content: center !important;

		svg {
			height: 1.25rem !important;
			width: 1.25rem !important;
		}
	}

	// Style for CustomSelect item with icon on the left.
	.es-custom-select-flex {
		display: flex;
		align-items: center;

		svg {
			height: 1.25rem;
			width: 1.25rem;
			margin-right: 0.4rem;
			color: currentColor;
		}
	}

	// Updated Placeholder component styles.
	.components-placeholder {
		&__label {
			i {
				margin-right: 0.4rem;
			}
		}

		&.is-large {
			box-shadow: inset 0 0 0 1px #E0E0E0;
			border-radius: 4px;
			min-height: 0;

			.components-placeholder__label {
				svg {
					height: 1.5rem;
					width: 1.5rem;
				}
			}

			.components-placeholder__fieldset {
				width: 100%;
			}
		}

		&.is-medium,
		&.is-small {
			padding: 1rem;
			box-shadow: inset 0 0 0 1px #E0E0E0;
			min-height: 0 !important;
			border-radius: 4px;

			.components-placeholder__label {
				svg {
					height: 1.25rem;
					width: 1.25rem;
				}
			}

			.components-placeholder__fieldset {
				display: flex;
				flex-direction: row;
				flex-wrap: wrap;
				gap: 0.75rem;
			}

			.block-editor-media-placeholder__upload-button {
				margin-bottom: 0 !important;
			}
		}

		.es-placeholder-input-flex {
			display: flex;
			flex-wrap: nowrap;
			gap: 0.5rem;
			width: 100%;

			.components-input-control {
				max-width: 19rem;
			}
		}
	}

	// Input error text style.
	.es-input-error {
		color: $base-error-color;
		font-size: 0.85rem;
		font-weight: 500;
	}

	// Styles for making empty block placeholders visible and usable (especially in Columns).
	.block-editor-block-list__layout {
		height: 100%;

		// If it's empty.
		&:empty {
			height: 100%;
			min-height: 4rem;
			border-radius: 8px;
			border: 1px dashed hsl(0, 0%, 90%);
		}

		// If it has one child, expand the expander to fill everything.
		// (aka when empty InnerBlocks is clicked and only has the appender)
		.block-list-appender.wp-block:only-child {
			height: 100%;

			.components-dropdown.block-editor-inserter {
				border-radius: 8px;
				border: 1px dashed hsl(0, 0%, 90%);
				height: 100%;

				.block-list-appender__toggle.block-editor-button-block-appender {
					min-height: 4rem;
					width: 100%;
					height: 100%;
					border-radius: 8px;
				}
			}
		}

		// Resize the appender when it's not the only child
		// to make it easier to hit.
		.block-list-appender.wp-block:not(:only-child) {
			.block-list-appender__toggle.block-editor-button-block-appender {
				width: auto;
				height: 100%;
				margin: 0 auto;
			}
		}
	}

	// Resize InnerBlocks container to fit.
	.block-editor-inner-blocks {
		height: 100%;
	}

	// Center the default [+] inserter.
	.block-editor-inserter {
		display: flex !important;
		align-items: center;
		justify-content: center;
	}

	// Simple button row/toolbar.
	.es-simple-editor-button-row {
		display: flex;
		gap: 0.5rem;
		margin-bottom: 0.5rem;
	}

	// Decorative/unselectable text.
	.es-decorative-text {
		opacity: 0.6;
		user-select: none;
	}

	// ColorPickerComponent inner color picker container.
	.es-color-picker-component__inner-container {
		padding: 0.5rem 1rem;
	}

	// ColorPickerComponent current color button icon.
	.es-color-picker-component__current-swatch {
		pointer-events: none;
		height: 1.15rem;
		width: 1.15rem;
		border-radius: 1.5rem;
		box-shadow: 0 0 0 1px #FFFFFF, 0 0 0 2px #888888;
	}

	// If added, a high-contrast outline appears which is visible on any background.
	// Note: could override any current drop shadows!
	.es-hi-vis-outline {
		box-shadow: 0 0 0 1px #FFFFFF, 0 0 0 2px #111111;
	}

	// Inline notification styles.
	.es-inline-notification {
		display: flex;
		align-items: center;
		gap: 0.25rem;
		padding: 0.25rem 0.3rem;
		padding-right: 0.45rem;
		font-size: 0.85rem;
		letter-spacing: 0.1px;
		border-radius: 0.6rem;
		font-weight: 600;
		width: max-content;

		&__icon {
			width: 1.5rem;
			height: 1.5rem;
			display: flex;
			align-items: center;
			justify-content: center;

			svg {
				width: 1.5rem;
				height: 1.5rem;
			}
		}

		&--error {
			color: #FFFFFF;
			background-color: #FF6666;
		}

		&--warning {
			color: #111111;
			background-color: #FFC837;
		}

		&--info {
			color: #00172C;
			background-color: #E0F6FF;
		}
	}

	// Fix fancy use toggle spacing.
	.es-panel-text-divider.es-icon-toggle.es-icon-toggle--reverse {
		& > .components-base-control__field {
			margin-bottom: 0.2rem;
		}
	}

	// IconToggle with help passed.
	.es-icon-toggle.es-icon-toggle--reverse.has-help {
		align-items: flex-start;

		svg {
			transform: translateY(-0.2rem) !important;
		}
	}

	// ES Simple vertical select styles.
	.es-simple-v-single-select {
		display: flex;
		flex-direction: column;
		gap: 1px;
		border-radius: 0.25rem;

		box-shadow: 0 0 0 1px hsl(0 0% 92%);

		.components-button {
			justify-content: flex-start !important;

			> svg {
				height: 1.5rem;
				width: 1.5rem;
			}

			border-radius: 0 !important;

			&:first-child {
				border-top-left-radius: 0.25rem !important;
				border-top-right-radius: 0.25rem !important;
			}

			&:last-child {
				border-bottom-left-radius: 0.25rem !important;
				border-bottom-right-radius: 0.25rem !important;
			}
		}

		.components-button:not(.is-pressed) {
			&:hover {
				border-color: var(--wp-admin-theme-color, #111111);
				background-color: hsl(0 0% 98%) !important;
			}
		}
	}

	// ES display flex with space-between.
	.es-flex-between {
		display: flex;
		align-items: center;
		justify-content: space-between;
		gap: 0.5rem;
		width: 100%;
		padding: 0.25rem 0;
	}

	// Style for labels which are not contained inside BaseControl.
	.es-label-flex {
		display: flex;
		align-items: center;
		gap: 0.5rem;

		svg {
			height: 1.5rem !important;
			width: 1.5rem !important;
			margin: 0 !important;

			&:not(button svg) {
				color: var(--wp-admin-theme-color, #111111);
			}
		}
	}

	// Icon-text CustomSelect option row.
	.icon-option-row {
		display: grid;
		align-items: center;
		grid-template-columns: 0.6rem 1fr;
		grid-gap: 1rem;

		i {
			margin: 0;
			padding: 0;

			svg {
				width: 1.2rem;
				height: 1.2rem;
			}
		}

		&--color {
			i {
				color: var(--wp-admin-theme-color, #007CBA);
			}
		}
	}

	// Add this class to any custom Responsive sub-element that should be inset when not expanded.
	.es-responsive-inset {}

	// A vertical flex container with a gap.
	.es-v-spaced {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}

	// A horizontal flex container with a gap.
	.es-h-spaced {
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}

	// Spinner animations for ServerSideRender.
	.es-ssr-spinner-overlay {
		position: absolute;
		inset: 0;

		width: 100%;
		height: 100%;
		min-height: 4rem;
		min-width: 4rem;

		display: flex;
		align-items: center;
		justify-content: center;

		&__spinner {
			animation: es-rotate 2s linear infinite;
			z-index: 2;
			width: 3rem;
			height: 3rem;
		}

		&__spinner-path,
		&__spinner-path-2 {
			stroke-linecap: round;
			animation: es-dash 1.5s ease-in-out infinite;
		}

		&__spinner-path {
			stroke: #F8FFFF;
		}

		&__spinner-path-2 {
			stroke: #0D3636;
		}
	}

	// Sets the toolbar/button icon size if the default 'iconSize' prop doesn't work.
	.es-toolbar-icon-24 {
		& > button > svg {
			width: 1.5rem;
			height: 1.5rem;
		}
	}

	.es-button-icon-24 {
		& > svg {
			width: 1.5rem;
			height: 1.5rem;
		}
	}

	// Styles for CollapsableComponentUseToggle.
	.es-collapsable-component-use-toggle {
		border-radius: 0.5rem;
		box-shadow: 0 0 0 0 transparent;
	
		transition: {
			property: box-shadow, padding, margin;
			timing-function: ease-out;
			duration: 0.2s;
		}
	
		&__trigger {
			display: grid;
			align-items: center;
			grid-template-columns: 1fr auto;
			grid-template-rows: auto;
			gap: 1rem;
	
			border-bottom: 1px solid transparent;
	
			transition: {
				property: border-color;
				timing-function: ease-out;
				duration: 0.3s;
			}
	
			.components-base-control,
			.components-base-control__field {
				margin: 0 !important;
			}
	
			span,
			label {
				display: block;
				margin: 0;
				padding: 0;
				opacity: 0.9;
				font-size: 0.7rem;
				font-weight: 500;
				letter-spacing: 1px;
				text-transform: uppercase;
				user-select: none;
				color: currentColor;
	
				transition: {
					property: color;
					timing-function: ease-out;
					duration: 0.3s;
				}
			}
		}
	
		&__toggle {
			.components-base-control__field {
				flex-grow: 1;
			}
		}
	
		&.is-open {
			box-shadow: 0 0 0 1px var(--wp-admin-theme-color, #194BD4);
			padding: 0.5rem;
	
			margin-left: -0.5rem;
			margin-right: -0.5rem;
	
			.es-collapsable-component-use-toggle__trigger {
				color: var(--wp-admin-theme-color, #194BD4);
				border-bottom-color: hsl(0 0 96%);
				padding-bottom: 0.5rem;
			}
	
			span,
			label {
				opacity: 1;
			}
	
			.es-collapsable-component-use-toggle__trigger {
				margin-bottom: 0.5rem;
			}
		}
	
		&__expander {
			width: 2.25rem;
			height: 2rem;
			padding: 0;
	
			box-shadow: inset 0 0 0 1px hsl(0 0 96%);
			border-radius: 100rem;
	
			svg {
				width: 1rem !important;
				height: 1rem !important;
			}
		}
	}	
}
