@use 'sass:math';

/// Calculate dynamic sizes using linear function for calculations.
///
/// ### Output
/// ```scss
/// .test {
///   font-size: calc(0.1374 * 100vw + -64.74809px);
/// }
/// ```
///
/// @access public
/// @author Ivan Ruzevic
/// @param {Size} $min-size - Minimal size after after responsiveness.
/// @param {Size} $max-size - Maximal size after after responsiveness.
/// @param {Size} $min-width - Minimal breakpoint to stop corrections.
/// @param {Size} $max-width - Max breakpoint to stop corrections.
///
/// @example
/// .test {
///   font-size: calc-dynamic-size(10px, 100px, mobile, desktop);
/// }

@function calc-dynamic-size($min-size, $max-size, $min-width: tablet, $max-width: desktop) {

	$min-width: nth(map-get-strict($media-breakpoints, $min-width), 1) * 1px;
	$max-width: nth(map-get-strict($media-breakpoints, $max-width), 2) * 1px;

	$ratio: math.div(($max-size - $min-size), ($max-width - $min-width));
	$factor: $min-size - ($ratio * $min-width);

	@return calc(#{$ratio} * 100vw + #{$factor});
}

// Short alias.
@function calcDS($min-size, $max-size, $min-width: tablet, $max-width: desktop) {
	@return calc-dynamic-size($min-size, $max-size, $min-width: tablet, $max-width: desktop);
}
